{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Toumi\\\\Documents\\\\Task-Management-Application\\\\Task-Management-Application-\\\\frontend\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"../api/authApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation locale du mot de passe\n    if (credentials.password.length < 6) {\n      toast.error(\"Le mot de passe doit contenir au moins 6 caractères.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await registerUser(credentials); // Appel API centralisé\n      toast.success(\"Inscription réussie !\");\n      navigate(\"/login\"); // Redirection vers la page de connexion\n    } catch (error) {\n      console.error(\"Erreur lors de l'inscription :\", error);\n      toast.error(\"Échec de l'inscription. Veuillez réessayer.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cr\\xE9er un compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: credentials.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Mot de passe\",\n      value: credentials.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? \"Inscription en cours...\" : \"S'inscrire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"v6BX0ide92CRRk+mWxXeyVZCPaI=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","toast","useNavigate","registerUser","jsxDEV","_jsxDEV","RegisterPage","_s","credentials","setCredentials","email","password","loading","setLoading","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","length","error","success","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/src/pages/RegisterPage.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../api/authApi\";\r\n\r\nconst RegisterPage = () => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation locale du mot de passe\r\n    if (credentials.password.length < 6) {\r\n      toast.error(\"Le mot de passe doit contenir au moins 6 caractères.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await registerUser(credentials); // Appel API centralisé\r\n      toast.success(\"Inscription réussie !\");\r\n      navigate(\"/login\"); // Redirection vers la page de connexion\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'inscription :\", error);\r\n      toast.error(\"Échec de l'inscription. Veuillez réessayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1>Créer un compte</h1>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={credentials.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Mot de passe\"\r\n        value={credentials.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Inscription en cours...\" : \"S'inscrire\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}