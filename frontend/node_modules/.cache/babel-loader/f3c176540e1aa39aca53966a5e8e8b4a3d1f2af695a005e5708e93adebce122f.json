{"ast":null,"code":"/*import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\n// Obtenir toutes les tâches\r\nexport const fetchTasks = async () => {\r\n  const response = await axios.get(`${API_URL}/tasks`);\r\n  return response.data;\r\n};\r\n\r\n// Ajouter une nouvelle tâche\r\nexport const addTask = async (task) => {\r\n  const response = await axios.post(`${API_URL}/tasks`, task);\r\n  return response.data;\r\n};\r\n*/// src/api/taskApi.js\nimport API from'./api';// Utilisation de l'instance axios\n// Fonction pour récupérer toutes les tâches\nexport const fetchTasks=async()=>{try{const response=await API.get('/tasks');// Exemple d'URL\nreturn response.data;}catch(error){throw new Error('Erreur lors de la récupération des tâches');}};// Fonction pour créer une nouvelle tâche\nexport const createTask=async taskData=>{try{const response=await API.post('/tasks',taskData);// Envoi des données pour créer une tâche\nreturn response.data;}catch(error){throw new Error('Erreur lors de la création de la tâche');}};// Fonction pour mettre à jour une tâche\nexport const updateTask=async(taskId,updatedData)=>{try{const response=await API.put(\"/tasks/\".concat(taskId),updatedData);// Mise à jour de la tâche\nreturn response.data;}catch(error){throw new Error('Erreur lors de la mise à jour de la tâche');}};// Fonction pour supprimer une tâche\nexport const deleteTask=async taskId=>{try{await API.delete(\"/tasks/\".concat(taskId));// Suppression de la tâche\n}catch(error){throw new Error('Erreur lors de la suppression de la tâche');}};","map":{"version":3,"names":["API","fetchTasks","response","get","data","error","Error","createTask","taskData","post","updateTask","taskId","updatedData","put","concat","deleteTask","delete"],"sources":["C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/src/api/taskApi.js"],"sourcesContent":["\r\n\r\n/*import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\n// Obtenir toutes les tâches\r\nexport const fetchTasks = async () => {\r\n  const response = await axios.get(`${API_URL}/tasks`);\r\n  return response.data;\r\n};\r\n\r\n// Ajouter une nouvelle tâche\r\nexport const addTask = async (task) => {\r\n  const response = await axios.post(`${API_URL}/tasks`, task);\r\n  return response.data;\r\n};\r\n*/\r\n\r\n// src/api/taskApi.js\r\nimport API from './api';  // Utilisation de l'instance axios\r\n\r\n// Fonction pour récupérer toutes les tâches\r\nexport const fetchTasks = async () => {\r\n  try {\r\n    const response = await API.get('/tasks');  // Exemple d'URL\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de la récupération des tâches');\r\n  }\r\n};\r\n\r\n// Fonction pour créer une nouvelle tâche\r\nexport const createTask = async (taskData) => {\r\n  try {\r\n    const response = await API.post('/tasks', taskData);  // Envoi des données pour créer une tâche\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de la création de la tâche');\r\n  }\r\n};\r\n\r\n// Fonction pour mettre à jour une tâche\r\nexport const updateTask = async (taskId, updatedData) => {\r\n  try {\r\n    const response = await API.put(`/tasks/${taskId}`, updatedData);  // Mise à jour de la tâche\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de la mise à jour de la tâche');\r\n  }\r\n};\r\n\r\n// Fonction pour supprimer une tâche\r\nexport const deleteTask = async (taskId) => {\r\n  try {\r\n    await API.delete(`/tasks/${taskId}`);  // Suppression de la tâche\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de la suppression de la tâche');\r\n  }\r\n};\r\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA;AACA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAAG;AAE1B;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,CAAC,QAAQ,CAAC,CAAG;AAC3C,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,2CAA2C,CAAC,CAC9D,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC5C,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACS,IAAI,CAAC,QAAQ,CAAED,QAAQ,CAAC,CAAG;AACtD,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,wCAAwC,CAAC,CAC3D,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,UAAU,CAAG,KAAAA,CAAOC,MAAM,CAAEC,WAAW,GAAK,CACvD,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAF,GAAG,CAACa,GAAG,WAAAC,MAAA,CAAWH,MAAM,EAAIC,WAAW,CAAC,CAAG;AAClE,MAAO,CAAAV,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,2CAA2C,CAAC,CAC9D,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,UAAU,CAAG,KAAO,CAAAJ,MAAM,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAX,GAAG,CAACgB,MAAM,WAAAF,MAAA,CAAWH,MAAM,CAAE,CAAC,CAAG;AACzC,CAAE,MAAON,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,2CAA2C,CAAC,CAC9D,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}