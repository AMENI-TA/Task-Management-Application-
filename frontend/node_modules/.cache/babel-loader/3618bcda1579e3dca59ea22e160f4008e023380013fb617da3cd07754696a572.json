{"ast":null,"code":"/* import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_AUTH_URL || \"http://localhost:5000/api/auth\";\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/login`, credentials);\r\n    return response.data.token;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || \"Une erreur est survenue\");\r\n  }\r\n};\r\n*/\n\n// src/api/authApi.js\n// src/api/authApi.js\nimport API from './api'; // Importation de l'instance axios configurée\n\n// Fonction pour l'authentification\nexport const loginUser = async credentials => {\n  try {\n    const response = await API.post('/auth/login', credentials); // Exemple d'URL\n    return response.data;\n  } catch (error) {\n    throw new Error('Erreur lors de la connexion');\n  }\n};\n\n// Fonction pour l'enregistrement\nexport const registerUser = async userData => {\n  try {\n    const response = await API.post('/auth/register', userData); // Exemple d'URL\n    return response.data;\n  } catch (error) {\n    throw new Error('Erreur lors de l\\'inscription');\n  }\n};","map":{"version":3,"names":["API","loginUser","credentials","response","post","data","error","Error","registerUser","userData"],"sources":["C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/src/api/authApi.js"],"sourcesContent":["\r\n\r\n/* import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_AUTH_URL || \"http://localhost:5000/api/auth\";\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/login`, credentials);\r\n    return response.data.token;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || \"Une erreur est survenue\");\r\n  }\r\n};\r\n*/\r\n\r\n// src/api/authApi.js\r\n// src/api/authApi.js\r\nimport API from './api';  // Importation de l'instance axios configurée\r\n\r\n// Fonction pour l'authentification\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await API.post('/auth/login', credentials);  // Exemple d'URL\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de la connexion');\r\n  }\r\n};\r\n\r\n\r\n// Fonction pour l'enregistrement\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await API.post('/auth/register', userData);  // Exemple d'URL\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de l\\'inscription');\r\n  }\r\n};"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,GAAG,MAAM,OAAO,CAAC,CAAE;;AAE1B;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC,CAAC,CAAE;IAC9D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC;;AAGD;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,gBAAgB,EAAEK,QAAQ,CAAC,CAAC,CAAE;IAC9D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}