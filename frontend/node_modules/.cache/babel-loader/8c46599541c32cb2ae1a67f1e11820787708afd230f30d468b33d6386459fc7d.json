{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Toumi\\\\Documents\\\\Task-Management-Application\\\\Task-Management-Application-\\\\frontend\\\\src\\\\components\\\\TaskList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*const TaskList = ({ tasks }) => {\r\n  return (\r\n    <ul>\r\n      {tasks.map((task) => (\r\n        <li key={task._id}>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <p>Deadline: {new Date(task.deadline).toLocaleDateString()}</p>\r\n          <p>Status: {task.status}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nconst TaskList = ({ tasks, onUpdateTask, onDeleteTask }) => {\r\n  return (\r\n    <ul>\r\n      {tasks.map((task) => (\r\n        <li key={task._id}>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <p>Deadline: {new Date(task.deadline).toLocaleDateString()}</p>\r\n          <p>Status: {task.status}</p>\r\n          <button onClick={() => onUpdateTask(task)}>Modifier</button>\r\n          <button onClick={() => onDeleteTask(task._id)}>Supprimer</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n*/\n\nconst TaskList = ({\n  tasks,\n  onUpdateTask,\n  onDeleteTask\n}) => {\n  if (!Array.isArray(tasks)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Erreur : la liste des t\\xE2ches est invalide.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  if (tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune t\\xE2che \\xE0 afficher.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onUpdateTask({}),\n        children: \"Ajouter une t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      onUpdateTask: onUpdateTask,\n      onDeleteTask: onDeleteTask\n    }, task._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["TaskList","tasks","onUpdateTask","onDeleteTask","Array","isArray","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","className","map","task","TaskItem","_id","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/src/components/TaskList.jsx"],"sourcesContent":["\r\n\r\n\r\n/*const TaskList = ({ tasks }) => {\r\n  return (\r\n    <ul>\r\n      {tasks.map((task) => (\r\n        <li key={task._id}>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <p>Deadline: {new Date(task.deadline).toLocaleDateString()}</p>\r\n          <p>Status: {task.status}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nconst TaskList = ({ tasks, onUpdateTask, onDeleteTask }) => {\r\n  return (\r\n    <ul>\r\n      {tasks.map((task) => (\r\n        <li key={task._id}>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <p>Deadline: {new Date(task.deadline).toLocaleDateString()}</p>\r\n          <p>Status: {task.status}</p>\r\n          <button onClick={() => onUpdateTask(task)}>Modifier</button>\r\n          <button onClick={() => onDeleteTask(task._id)}>Supprimer</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n*/\r\n\r\nconst TaskList = ({ tasks, onUpdateTask, onDeleteTask }) => {\r\n  if (!Array.isArray(tasks)) {\r\n    return <p>Erreur : la liste des tâches est invalide.</p>;\r\n  }\r\n\r\n  if (tasks.length === 0) {\r\n    return (\r\n      <div>\r\n        <p>Aucune tâche à afficher.</p>\r\n        <button onClick={() => onUpdateTask({})}>Ajouter une tâche</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      {tasks.map((task) => (\r\n        <TaskItem\r\n          key={task._id}\r\n          task={task}\r\n          onUpdateTask={onUpdateTask}\r\n          onDeleteTask={onDeleteTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAC1D,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;IACzB,oBAAOK,OAAA;MAAAC,QAAA,EAAG;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1D;EAEA,IAAIV,KAAK,CAACW,MAAM,KAAK,CAAC,EAAE;IACtB,oBACEN,OAAA;MAAAC,QAAA,gBACED,OAAA;QAAAC,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/BL,OAAA;QAAQO,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAEV;EAEA,oBACEL,OAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAP,QAAA,EACvBN,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdV,OAAA,CAACW,QAAQ;MAEPD,IAAI,EAAEA,IAAK;MACXd,YAAY,EAAEA,YAAa;MAC3BC,YAAY,EAAEA;IAAa,GAHtBa,IAAI,CAACE,GAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACQ,EAAA,GA1BInB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}