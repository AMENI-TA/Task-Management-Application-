{"ast":null,"code":"import _objectSpread from\"C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/*import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../api/authApi\";\r\n\r\nconst RegisterPage = () => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation locale du mot de passe\r\n    if (credentials.password.length < 6) {\r\n      toast.error(\"Le mot de passe doit contenir au moins 6 caractères.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await registerUser(credentials); // Appel API centralisé\r\n      toast.success(\"Inscription réussie !\");\r\n      navigate(\"/login\"); // Redirection vers la page de connexion\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'inscription :\", error);\r\n      toast.error(\"Échec de l'inscription. Veuillez réessayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1>Créer un compte</h1>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={credentials.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Mot de passe\"\r\n        value={credentials.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Inscription en cours...\" : \"S'inscrire\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n*/// src/pages/RegisterPage.jsx\nimport React,{useState}from\"react\";import{registerUser}from\"../api/authApi\";// Utilisation de registerUser\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterPage=()=>{const[userData,setUserData]=useState({name:\"\",email:\"\",password:\"\"});const handleChange=e=>{setUserData(_objectSpread(_objectSpread({},userData),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();try{const newUser=await registerUser(userData);// Appel de la fonction registerUser\nconsole.log(\"User registered:\",newUser);// Ajouter ici la gestion du token ou de la session utilisateur\n}catch(error){console.error(\"Registration failed:\",error);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:userData.name,onChange:handleChange,placeholder:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:userData.email,onChange:handleChange,placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:userData.password,onChange:handleChange,placeholder:\"Password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]});};export default RegisterPage;","map":{"version":3,"names":["React","useState","registerUser","jsx","_jsx","jsxs","_jsxs","RegisterPage","userData","setUserData","name","email","password","handleChange","e","_objectSpread","target","value","handleSubmit","preventDefault","newUser","console","log","error","onSubmit","children","type","onChange","placeholder"],"sources":["C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/src/pages/RegisterPage.jsx"],"sourcesContent":["\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../api/authApi\";\r\n\r\nconst RegisterPage = () => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation locale du mot de passe\r\n    if (credentials.password.length < 6) {\r\n      toast.error(\"Le mot de passe doit contenir au moins 6 caractères.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await registerUser(credentials); // Appel API centralisé\r\n      toast.success(\"Inscription réussie !\");\r\n      navigate(\"/login\"); // Redirection vers la page de connexion\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'inscription :\", error);\r\n      toast.error(\"Échec de l'inscription. Veuillez réessayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1>Créer un compte</h1>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={credentials.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Mot de passe\"\r\n        value={credentials.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Inscription en cours...\" : \"S'inscrire\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n*/\r\n\r\n\r\n// src/pages/RegisterPage.jsx\r\nimport React, { useState } from \"react\";\r\nimport { registerUser } from \"../api/authApi\";  // Utilisation de registerUser\r\n\r\nconst RegisterPage = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newUser = await registerUser(userData);  // Appel de la fonction registerUser\r\n      console.log(\"User registered:\", newUser);\r\n      // Ajouter ici la gestion du token ou de la session utilisateur\r\n    } catch (error) {\r\n      console.error(\"Registration failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={userData.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={userData.email}\r\n        onChange={handleChange}\r\n        placeholder=\"Email\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={userData.password}\r\n        onChange={handleChange}\r\n        placeholder=\"Password\"\r\n      />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"uLAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAGA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,YAAY,KAAQ,gBAAgB,CAAG;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACvCS,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAEF,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CAC1BL,WAAW,CAAAM,aAAA,CAAAA,aAAA,IACNP,QAAQ,MACX,CAACM,CAAC,CAACE,MAAM,CAACN,IAAI,EAAGI,CAAC,CAACE,MAAM,CAACC,KAAK,EAChC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAJ,CAAC,EAAK,CAChCA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAlB,YAAY,CAACM,QAAQ,CAAC,CAAG;AAC/Ca,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEF,OAAO,CAAC,CACxC;AACF,CAAE,MAAOG,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAED,mBACEjB,KAAA,SAAMkB,QAAQ,CAAEN,YAAa,CAAAO,QAAA,eAC3BrB,IAAA,UACEsB,IAAI,CAAC,MAAM,CACXhB,IAAI,CAAC,MAAM,CACXO,KAAK,CAAET,QAAQ,CAACE,IAAK,CACrBiB,QAAQ,CAAEd,YAAa,CACvBe,WAAW,CAAC,MAAM,CACnB,CAAC,cACFxB,IAAA,UACEsB,IAAI,CAAC,OAAO,CACZhB,IAAI,CAAC,OAAO,CACZO,KAAK,CAAET,QAAQ,CAACG,KAAM,CACtBgB,QAAQ,CAAEd,YAAa,CACvBe,WAAW,CAAC,OAAO,CACpB,CAAC,cACFxB,IAAA,UACEsB,IAAI,CAAC,UAAU,CACfhB,IAAI,CAAC,UAAU,CACfO,KAAK,CAAET,QAAQ,CAACI,QAAS,CACzBe,QAAQ,CAAEd,YAAa,CACvBe,WAAW,CAAC,UAAU,CACvB,CAAC,cACFxB,IAAA,WAAQsB,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACnC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAlB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}