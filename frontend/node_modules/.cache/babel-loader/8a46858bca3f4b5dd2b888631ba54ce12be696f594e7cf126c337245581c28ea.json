{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Toumi\\\\Documents\\\\Task-Management-Application\\\\Task-Management-Application-\\\\frontend\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../api/authApi\";\r\n\r\nconst RegisterPage = () => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation locale du mot de passe\r\n    if (credentials.password.length < 6) {\r\n      toast.error(\"Le mot de passe doit contenir au moins 6 caractères.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await registerUser(credentials); // Appel API centralisé\r\n      toast.success(\"Inscription réussie !\");\r\n      navigate(\"/login\"); // Redirection vers la page de connexion\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'inscription :\", error);\r\n      toast.error(\"Échec de l'inscription. Veuillez réessayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1>Créer un compte</h1>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={credentials.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Mot de passe\"\r\n        value={credentials.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Inscription en cours...\" : \"S'inscrire\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n*/\n\n// src/pages/RegisterPage.jsx\nimport React, { useState } from \"react\";\nimport { registerUser } from \"../api/authApi\"; // Utilisation de registerUser\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newUser = await registerUser(userData); // Appel de la fonction registerUser\n      console.log(\"User registered:\", newUser);\n      // Ajouter ici la gestion du token ou de la session utilisateur\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: userData.name,\n      onChange: handleChange,\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: userData.email,\n      onChange: handleChange,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: userData.password,\n      onChange: handleChange,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"BHxCVZynPAW2W1VWfO98gtrXVm0=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","registerUser","jsxDEV","_jsxDEV","RegisterPage","_s","userData","setUserData","name","email","password","handleChange","e","target","value","handleSubmit","preventDefault","newUser","console","log","error","onSubmit","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/src/pages/RegisterPage.jsx"],"sourcesContent":["\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../api/authApi\";\r\n\r\nconst RegisterPage = () => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation locale du mot de passe\r\n    if (credentials.password.length < 6) {\r\n      toast.error(\"Le mot de passe doit contenir au moins 6 caractères.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await registerUser(credentials); // Appel API centralisé\r\n      toast.success(\"Inscription réussie !\");\r\n      navigate(\"/login\"); // Redirection vers la page de connexion\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'inscription :\", error);\r\n      toast.error(\"Échec de l'inscription. Veuillez réessayer.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1>Créer un compte</h1>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={credentials.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Mot de passe\"\r\n        value={credentials.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Inscription en cours...\" : \"S'inscrire\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n*/\r\n\r\n\r\n// src/pages/RegisterPage.jsx\r\nimport React, { useState } from \"react\";\r\nimport { registerUser } from \"../api/authApi\";  // Utilisation de registerUser\r\n\r\nconst RegisterPage = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newUser = await registerUser(userData);  // Appel de la fonction registerUser\r\n      console.log(\"User registered:\", newUser);\r\n      // Ajouter ici la gestion du token ou de la session utilisateur\r\n    } catch (error) {\r\n      console.error(\"Registration failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={userData.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={userData.email}\r\n        onChange={handleChange}\r\n        placeholder=\"Email\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={userData.password}\r\n        onChange={handleChange}\r\n        placeholder=\"Password\"\r\n      />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,gBAAgB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACM,CAAC,CAACC,MAAM,CAACL,IAAI,GAAGI,CAAC,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMhB,YAAY,CAACK,QAAQ,CAAC,CAAC,CAAE;MAC/CY,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,OAAO,CAAC;MACxC;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAMkB,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3BnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXf,IAAI,EAAC,MAAM;MACXM,KAAK,EAAER,QAAQ,CAACE,IAAK;MACrBgB,QAAQ,EAAEb,YAAa;MACvBc,WAAW,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACF1B,OAAA;MACEoB,IAAI,EAAC,OAAO;MACZf,IAAI,EAAC,OAAO;MACZM,KAAK,EAAER,QAAQ,CAACG,KAAM;MACtBe,QAAQ,EAAEb,YAAa;MACvBc,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF1B,OAAA;MACEoB,IAAI,EAAC,UAAU;MACff,IAAI,EAAC,UAAU;MACfM,KAAK,EAAER,QAAQ,CAACI,QAAS;MACzBc,QAAQ,EAAEb,YAAa;MACvBc,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF1B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACxB,EAAA,CAnDID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAqDlB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}