{"ast":null,"code":"/* import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_AUTH_URL || \"http://localhost:5000/api/auth\";\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/login`, credentials);\r\n    return response.data.token;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || \"Une erreur est survenue\");\r\n  }\r\n};\r\n*/// src/api/authApi.js\n// src/api/authApi.js\nimport API from'./api';// Importation de l'instance axios configurée\n// Fonction pour l'authentification\nexport const loginUser=async credentials=>{try{const response=await API.post('/auth/login',credentials);// Exemple d'URL\nreturn response.data;}catch(error){throw new Error('Erreur lors de la connexion');}};// Fonction pour l'enregistrement\nexport const registerUser=async userData=>{try{const response=await API.post('/auth/register',userData);// Exemple d'URL\nreturn response.data;}catch(error){throw new Error('Erreur lors de l\\'inscription');}};","map":{"version":3,"names":["API","loginUser","credentials","response","post","data","error","Error","registerUser","userData"],"sources":["C:/Users/Mohamed Toumi/Documents/Task-Management-Application/Task-Management-Application-/frontend/src/api/authApi.js"],"sourcesContent":["\r\n\r\n/* import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_AUTH_URL || \"http://localhost:5000/api/auth\";\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/login`, credentials);\r\n    return response.data.token;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || \"Une erreur est survenue\");\r\n  }\r\n};\r\n*/\r\n\r\n// src/api/authApi.js\r\n// src/api/authApi.js\r\nimport API from './api';  // Importation de l'instance axios configurée\r\n\r\n// Fonction pour l'authentification\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await API.post('/auth/login', credentials);  // Exemple d'URL\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de la connexion');\r\n  }\r\n};\r\n\r\n\r\n// Fonction pour l'enregistrement\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await API.post('/auth/register', userData);  // Exemple d'URL\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Erreur lors de l\\'inscription');\r\n  }\r\n};"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA;AACA;AACA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAAG;AAE1B;AACA,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,aAAa,CAAEF,WAAW,CAAC,CAAG;AAC9D,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACF,CAAC,CAGD;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,gBAAgB,CAAEK,QAAQ,CAAC,CAAG;AAC9D,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,+BAA+B,CAAC,CAClD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}